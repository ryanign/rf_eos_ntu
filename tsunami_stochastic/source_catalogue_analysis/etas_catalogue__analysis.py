"""
Ryan Pranantyo
EOS, May 2025

first step analysis of ETAS catalogue generated by Pepe
"""
import os, sys
import numpy as np
import pandas as pd
import geopandas as gpd
import matplotlib.pyplot as plt
import cartopy.crs as ccrs
import cmcrameri.cm as cm
from pathlib import Path

### catalogue
catalogue_f = Path("/home/ignatius.pranantyo/Tsunamis/Stochastic__Sumatera_Java/PUSGEN2017__Segmentatations/input_files__SouthernJava/earthquake_catalogue__region/20250520__cat_6.5-8_100k.dat")
cat_df = pd.read_fwf(catalogue_f, header = None)
cat_df = cat_df.rename(columns = {0 : 'TIME', 1 : 'Mw', 2 : 'LON', 3 : 'LAT', 4 : 'NN'})

### bbox
bbox_f = "/home/ignatius.pranantyo/Tsunamis/Stochastic__Sumatera_Java/PUSGEN2017__Segmentatations/input_files__SouthernJava/earthquake_catalogue__region/BBox__SLAB2__Jawa__Region__forPepe.shp"
bbox = gpd.read_file(bbox_f)

### to save
out_path = Path(os.path.join(catalogue_f.parent, "figures"))
out_path.mkdir(exist_ok = True)

### basic histogram
NYears = 100000

# basic GR
a_val = 5.99
b_val = 1.15

Mw_bins = np.arange(6.45, 8.05, 0.1)
Mw_ticks = np.arange(6.5, 8.1, 0.1)
#hist , _ = np.histogram(cat_df['Mw'], bins = Mw_bins)

GR_X_yr = 10**( a_val - b_val * Mw_ticks) * NYears

plt.close()
fig = plt.figure(figsize = (10,5), constrained_layout = True)
ax = fig.add_subplot(1,1,1)
ax.hist(cat_df['Mw'], bins = Mw_bins, color="blue", label="from Pepe")
ax.plot(Mw_ticks, GR_X_yr, c="black", label=f"a={a_val}; b={b_val}")
ax.set_xticks(Mw_ticks)
ax.set_xlabel("Mw")
ax.set_ylabel("Num of events")
ax.legend()


fout = os.path.join(out_path, f"{catalogue_f.name[:-4]}.png")
fig.savefig(fout)
plt.close()

### basic Mw timeseries
fig = plt.figure(figsize = (10, 5), constrained_layout = True)
ax = fig.add_subplot(1,1,1)
ax.vlines(x=cat_df["TIME"], ymin = 5, ymax = cat_df["Mw"])
ax.set_xticks(np.arange(0, 110000, 20000))
ax.set_xlabel("Year")
ax.set_ylabel("Mw")
ax.set_ylim(5, 9)
fout = os.path.join(out_path, f"{catalogue_f.name[:-4]}__timeseries.png")
fig.savefig(fout)
plt.close()

### spatial catalogue - BASIC!
fig = plt.figure(figsize = (10, 5), constrained_layout = True)
ax = fig.add_subplot(1,1,1, projection=ccrs.PlateCarree())
ax.set_title(f"Catalogue Mw 6.5 to 8.0 (proposed)")
ax.coastlines(linewidth = 0.5)

bbox.plot(ax = ax, ec = "gray", fc = "None", linewidth = 0.1)
bbox[bbox["USE"] == 2].plot(ax = ax, ec = "black", fc = "None", linewidth = 0.3)

CAT = ax.scatter(
        cat_df["LON"], 
        cat_df["LAT"],
        c = cat_df["TIME"],
        cmap = cm.bilbao,
        marker = "o", 
        s = cat_df["Mw"] * 0.8, 
        alpha = 0.5
        )

cat_clr = ["red", "green", "blue", "black"]
for ii, thres in enumerate([7.5, 7.6, 7.7, 7.8]):
    cat_filt_df = cat_df[cat_df["Mw"] > thres]
    ax.scatter(
            cat_filt_df["LON"],
            cat_filt_df["LAT"],
            marker = "*",
            s = 50,
            c = cat_clr[ii],
            label = f"Mw{thres}+; N = {len(cat_filt_df)}")



cb = fig.colorbar(CAT, pad = 0, shrink = 0.5, orientation = "horizontal")
cb.set_label("Time")

ax.set_xlim(bbox.bounds.minx.min() - 1, bbox.bounds.maxx.max() + 1)
ax.set_ylim(bbox.bounds.miny.min() - 1, bbox.bounds.maxy.max() + 1)
ax.legend()

fout = os.path.join(out_path, f"{catalogue_f.name[:-4]}__map.png")
fig.savefig(fout)
plt.close()
